<!DOCTYPE html>
<html>

<head>
    <%- include("./partials/head", { pageTitle: "Incentives" }); %>
</head>

<body>

    <nav>
        <%- include ("./partials/nav"); %>
    </nav>

    <div class="content">
        <header>
            <%- include ("./partials/header", { pageTitle: "Incentives" }); %>

        </header>

        <main>
        </main>

        <footer>
            <%- include ("./partials/footer"); %>
        </footer>
    </div>

</body>

<script id="tableScript">
    start(new URLSearchParams(window.location.search).get('event'));

    function start(eventShort) {
        let event = eventShort;

        load(<% details %>)

        generateTable({
            name: 'incentive',
            model: 'incentives',
            endpoint: `incentives/event/${event}`,
            event: event,
            table: [{
                name: 'Name',
                textFunction: (value) => {
                    if (value.type === 'target') return value.name;
                    return `${value.name}<br>
                    <button class="tableOptionsButton" incentiveid=${value._id} onClick="showOptionsSubtable(this)">Show Options</button>
                `
                }
            }, {
                name: 'Run',
                textFunction: (value) => { return value.run.game; }
            }, {
                name: 'Description',
                data: 'description'
            }, {
                name: 'Total',
                textFunction: (value, details) => {
                    return `<%= details.currencySymbol %>${value.total.toFixed(2)}`
                }
            }, {
                name: 'Goal',
                textFunction: (value, details) => {
                    if (value.type === 'bidwar') return '(None)';
                    return `<%= details.currencySymbol %>${value.goal.toFixed(2)}`
                }
            }],
            clickFunction: (value) => {
                return `location.href = '/incentives/${event}/${value.id}'`
            },
            subTableData: 'options',
            subTableFunction: (value) => {
                if (value.type === 'bidwar') return true;
                return false;
            },
            subTable: [{
                name: 'Option',
                data: 'name',
            }, {
                name: 'Amount',
                textFunction: (value, details) => {
                    return `<%= details.currencySymbol %>${value.total.toFixed(2)}`
                }
            }, {
                name: 'User Option',
                textFunction: (value) => {
                    if (value.userOption) return 'Yes';
                    return 'No';
                }
            }]
        })
    }
</script>

</html>